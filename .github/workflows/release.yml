name: goreleaser

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Fetch all tags
        run: git fetch --force --tags
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: build --rm-dist
      -
        name: Install wash 
        uses: wasmcloud/common-actions/install-wash@main
      -
        name: Create Providers
        run: |
          wash par create --arch x86_64-macos   --binary dist/kv-go_darwin_amd64_v1/kv-go --capid wasmcloud:keyvalue --name "Tailscale HTTPServer (Go)" --vendor jordan-rash --version ${{ github.ref_name }} --revision 1 --destination dist/provider.par.gz
          wash par insert --arch aarch64-macos  --binary dist/kv-go_darwin_arm64/kv-go   dist/provider.par.gz
          wash par insert --arch x86_64-linux   --binary dist/kv-go_linux_amd64_v1/kv-go dist/provider.par.gz
          wash par insert --arch aarch64-linux  --binary dist/kv-go_linux_arm64/kv-go    dist/provider.par.gz
      - name: Upload provider archive to GH Actions
        env:
          WASH_REG_USER: jordan-rash
          WASH_REG_PASSWORD: ${{ secrets.WASH_PAT }}
        run: |
          wash reg push ghcr.io/jordan-rash/tsnet-httpserver:${{ github.ref_name }} dist/provider.par.gz -a org.opencontainers.image.source=https://github.com/jordan-rash/tsnet-httpserver -a org.opencontainers.image.description="Tailscale HTTPServer Provider (Go)"

